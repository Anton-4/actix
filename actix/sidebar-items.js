initSidebarItems({"enum":[["ActorState","Actor execution state"],["FramedError",""],["MailboxError","Set of error that can occure during message delivery process"]],"mod":[["actors","Helper actors"],["dev","The `actix` prelude for library developers"],["fut","Custom `Future` implementation with `Actix` support"],["msgs","Actix system messages"],["prelude","The `actix` prelude"],["sync","Sync actors support"],["utils",""]],"struct":[["Address","Local address of the actor"],["Arbiter","Event loop controller"],["Context","Actor execution context"],["FramedReader","Framed type wrapper, that simplify handling framed objects with actor"],["FramedWriter","Framed sink type wrapper, that simplify handling framed objects with actor"],["Registry","Actors registry"],["Response","Helper type for representing different type of message responses"],["SpawnHandle","Spawned future handle. Could be used for cancelling spawned future."],["Supervisor","Actor supervisor"],["SyncAddress","`Send` address of the actor. Actor can run in different thread"],["System","System is an actor which manages process."],["SystemRegistry","System wide actors registry"],["SystemRunner","Helper object that runs System's event loop"]],"trait":[["Actor","Actors are objects which encapsulate state and behavior."],["ActorAddress","Trait give access to actor's address"],["ActorContext","Actor execution context"],["ArbiterService","Trait defines arbiter's service."],["AsyncContext","Asynchronous execution context"],["Handler","Message handler"],["ResponseType","Message response type"],["StreamHandler","Stream handler"],["Subscriber","Subscriber trait describes ability of actor to receive one specific message"],["Supervised","Actors with ability to restart after failure"],["SystemService","Trait defines system's service."],["ToEnvelope","Converter trait, packs message to suitable envelope"]],"type":[["MessageResult","A specialized `Result` for message result responses"],["ResponseActFuture","A specialized actor future for async message handler"],["ResponseFuture","A specialized future for async message handler"]]});